{
  "_args": [
    [
      {
        "raw": "musicmetadata@^2.0.5",
        "scope": null,
        "escapedName": "musicmetadata",
        "name": "musicmetadata",
        "rawSpec": "^2.0.5",
        "spec": ">=2.0.5 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\Steve\\documents\\Personal\\Music System\\app\\MusicDisplayer"
    ]
  ],
  "_from": "musicmetadata@>=2.0.5 <3.0.0",
  "_id": "musicmetadata@2.0.5",
  "_inCache": true,
  "_location": "/musicmetadata",
  "_nodeVersion": "7.1.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/musicmetadata-2.0.5.tgz_1479690166463_0.14204892562702298"
  },
  "_npmUser": {
    "name": "leetreveil",
    "email": "leetreveil@gmail.com"
  },
  "_npmVersion": "3.10.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "musicmetadata@^2.0.5",
    "scope": null,
    "escapedName": "musicmetadata",
    "name": "musicmetadata",
    "rawSpec": "^2.0.5",
    "spec": ">=2.0.5 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/musicmetadata/-/musicmetadata-2.0.5.tgz",
  "_shasum": "7ae910d99fbaee05f2bd543aef10b6fbe1f37bd4",
  "_shrinkwrap": null,
  "_spec": "musicmetadata@^2.0.5",
  "_where": "C:\\Users\\Steve\\documents\\Personal\\Music System\\app\\MusicDisplayer",
  "author": {
    "name": "Lee Treveil"
  },
  "browser": "lib/browser",
  "bugs": {
    "url": "https://github.com/leetreveil/musicmetadata/issues"
  },
  "dependencies": {
    "deep-equal": "0.2.1",
    "filereader-stream": "^0.2.0",
    "is-stream": "^1.1.0",
    "strtok2": "~1.0.0",
    "through": "~2.3.4"
  },
  "description": "Streaming music metadata parser for node and the browser.",
  "devDependencies": {
    "brfs": "1.2.0",
    "browserify": "^13.0.0",
    "jshint": "~2.5.10",
    "standard": "^3.0.0",
    "tape": "^4.5.1",
    "testling": "^1.7.1"
  },
  "directories": {},
  "dist": {
    "shasum": "7ae910d99fbaee05f2bd543aef10b6fbe1f37bd4",
    "tarball": "https://registry.npmjs.org/musicmetadata/-/musicmetadata-2.0.5.tgz"
  },
  "engines": {
    "node": "*"
  },
  "gitHead": "90b8795756133ed9cdc5c1b85f7df48fbd983798",
  "homepage": "https://github.com/leetreveil/musicmetadata#readme",
  "jshintConfig": {
    "asi": true,
    "node": true,
    "maxlen": 100,
    "indent": 2
  },
  "keywords": [
    "id3",
    "id3v1",
    "id3v2",
    "m4a",
    "mp4",
    "vorbis",
    "ogg",
    "flac",
    "asf",
    "wma",
    "wmv",
    "tags",
    "tag"
  ],
  "license": "MIT",
  "main": "lib",
  "maintainers": [
    {
      "name": "leetreveil",
      "email": "leetreveil@gmail.com"
    }
  ],
  "name": "musicmetadata",
  "optionalDependencies": {},
  "readme": "[![Build Status][travis-image]][travis-url] [![NPM version][npm-image]][npm-url] [![npm downloads][npm-downloads-image]][npm-url]\n\nStreaming music metadata parser for node and the browser.\n\nInstallation\n------------\nInstall via [npm](http://npmjs.org):\n\n```\nnpm install musicmetadata\n```\n\nYou can also download a pre packaged browser release from `dist/musicmetadata.js`.\nSee `example/index.html` for usage.\n\n\nSupports\n-----------------\n* mp3 (1.1, 2.2, 2.3, 2.4)\n* m4a (mp4)\n* vorbis (ogg, flac)\n* asf (wma, wmv)\n\n\nAPI\n-----------------\n```javascript\nvar fs = require('fs');\nvar mm = require('musicmetadata');\n\n// create a new parser from a node ReadStream\nvar parser = mm(fs.createReadStream('sample.mp3'), function (err, metadata) {\n  if (err) throw err;\n  console.log(metadata);\n});\n```\n\nThis will output the standard music metadata:\n\n```javascript\n{ artist : ['Spor'],\n  album : 'Nightlife, Vol 5.',\n  albumartist : [ 'Andy C', 'Spor' ],\n  title : 'Stronger',\n  year : '2010',\n  track : { no : 1, of : 44 },\n  disk : { no : 1, of : 2 },\n  genre : ['Drum & Bass'],\n  picture : [ { format : 'jpg', data : <Buffer> } ],\n  duration : 302.41 // in seconds\n}\n```\n\nNote, the stream is not closed by default. To prevent leaks, you must close it yourself:\n```javascript\nvar readableStream = fs.createReadStream('sample.mp3');\nvar parser = mm(readableStream, function (err, metadata) {\n  if (err) throw err;\n  readableStream.close();\n});\n```\n\n`musicmetadata` also emits all metadata it discovers during parsing. For example if you wanted to read the `TLEN` frame from an id3v2.x file you can do this:\n\n```javascript\nparser.on('TLEN', function (result) {\n  console.log(result);\n});\n```\n\nYou can also read the duration; to calculate the duration `musicmetadata` may need to parse the entire file\nso only enable this if you need the functionality.\n```javascript\nmm(fs.createReadStream('sample.mp3'), { duration: true }, function (err, metadata) {\n\n});\n```\n\nNote that in order to read the duration for streams that are not file streams, you must also pass the size of the file in bytes.\n```javascript\nmm(fs.createReadStream('sample.mp3'), { duration: true, fileSize: 26838 }, function (err, metadata) {\n\n});\n```\n\nLicence\n-----------------\n\n(The MIT License)\n\nCopyright (c) 2016 Lee Treveil <leetreveil@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[npm-url]: https://npmjs.org/package/musicmetadata\n[npm-image]: https://badge.fury.io/js/musicmetadata.svg\n[npm-downloads-image]: http://img.shields.io/npm/dm/musicmetadata.svg\n\n[travis-url]: https://travis-ci.org/leetreveil/musicmetadata\n[travis-image]: https://api.travis-ci.org/leetreveil/musicmetadata.svg?branch=master\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/leetreveil/musicmetadata.git"
  },
  "scripts": {
    "dist": "browserify lib/browser.js --standalone 'musicmetadata' -o dist/musicmetadata.js",
    "pretest": "standard && jshint lib/*.js test/*.js",
    "test": "[ ! -d 'test/' ] && echo 'The test directory is not included with the project due to the size of the test audio files. If you want to run the tests you can git clone the project.' || tape test/test-*.js",
    "test-browser": "for f in test/test-*.js; do browserify -t brfs $f | testling; done"
  },
  "standard": {
    "ignore": [
      "**/dist/**"
    ]
  },
  "testling": {
    "files": [
      "test/test-js-*.js",
      "test/js-*.js"
    ],
    "browsers": [
      "firefox/latest",
      "chrome/latest",
      "safari/latest"
    ]
  },
  "version": "2.0.5"
}
